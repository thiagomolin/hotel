/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package javaapplication1;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.time.LocalDate;
import java.time.ZoneId;
import java.util.Date;
import java.util.Vector;
import java.util.concurrent.TimeUnit;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Thiago Vinícius
 */
public class FecharConta extends javax.swing.JFrame {
    
    JFrame parent;
          
    Vector<Vector<Object>> dadosDaTabela = new Vector<Vector<Object>>();
    
    
    public FecharConta(JFrame parent) {
        this.parent = parent;       
        
        initComponents();
        this.setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        comboBoxNrQuarto = new javax.swing.JComboBox<>();
        buscarDados = new javax.swing.JButton();
        pane = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabela = new javax.swing.JTable();
        adicionarProduto = new javax.swing.JButton();
        pagarConta = new javax.swing.JButton();
        labelTotal = new javax.swing.JLabel();
        labelValorTotal = new javax.swing.JLabel();
        labelRS = new javax.swing.JLabel();
        processar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setAlwaysOnTop(true);
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
        });

        jLabel1.setText("Numero do Quarto:");

        buscarDados.setText("Buscar Dados");
        buscarDados.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buscarDadosActionPerformed(evt);
            }
        });

        pane.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel2.setText("Total de Valores");

        jScrollPane1.setViewportView(tabela);

        javax.swing.GroupLayout paneLayout = new javax.swing.GroupLayout(pane);
        pane.setLayout(paneLayout);
        paneLayout.setHorizontalGroup(
            paneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(paneLayout.createSequentialGroup()
                .addGap(103, 103, 103)
                .addComponent(jLabel2)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
        );
        paneLayout.setVerticalGroup(
            paneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(paneLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(156, 156, 156))
        );

        adicionarProduto.setText("Adicionar Produto à Conta");
        adicionarProduto.setEnabled(false);
        adicionarProduto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                adicionarProdutoActionPerformed(evt);
            }
        });

        pagarConta.setText("Pagar Conta");
        pagarConta.setEnabled(false);
        pagarConta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pagarContaActionPerformed(evt);
            }
        });

        labelTotal.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        labelTotal.setText("TOTAL:");
        labelTotal.setEnabled(false);

        labelValorTotal.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        labelValorTotal.setText("             ");

        labelRS.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        labelRS.setText("R$");
        labelRS.setEnabled(false);

        processar.setText("Processar");
        processar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                processarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(pane, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(adicionarProduto)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(pagarConta))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(53, 53, 53)
                        .addComponent(labelTotal)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 90, Short.MAX_VALUE)
                        .addComponent(labelRS)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(labelValorTotal)
                        .addGap(58, 58, 58)))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(88, 88, 88)
                .addComponent(buscarDados)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(comboBoxNrQuarto, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(processar)
                .addGap(25, 25, 25))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(buscarDados, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(comboBoxNrQuarto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(processar, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(pane, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelTotal)
                    .addComponent(labelValorTotal)
                    .addComponent(labelRS))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 36, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(pagarConta)
                    .addComponent(adicionarProduto))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
         parent.setEnabled(true);
         parent.toFront();
    }//GEN-LAST:event_formWindowClosed

    private void buscarDadosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buscarDadosActionPerformed

        try{
            Connection con = DriverManager.getConnection("jdbc:derby://localhost:1527/Hotel", "root", "123456" );

            PreparedStatement nomesQuery = con.prepareStatement("SELECT * FROM quartos WHERE ocupado=true");            
            ResultSet nomesrs = nomesQuery.executeQuery();

            comboBoxNrQuarto.removeAllItems();
            
            while(nomesrs.next()){
                comboBoxNrQuarto.addItem(nomesrs.getString("numero"));
            }
            
            con.close();
        }
        catch(SQLException ex){

        }

    }//GEN-LAST:event_buscarDadosActionPerformed

    private void adicionarProdutoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_adicionarProdutoActionPerformed
        this.setEnabled(false);
        AdicionarProdutoAConta ac = new AdicionarProdutoAConta(this, dadosDaTabela);
        ac.setVisible(true);
    }//GEN-LAST:event_adicionarProdutoActionPerformed

    private void processarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_processarActionPerformed
        
        String quartoASerPago = comboBoxNrQuarto.getSelectedItem().toString();
        
        if(quartoASerPago != null){
            adicionarProduto.setEnabled(true); processar.setEnabled(false);
            pagarConta.setEnabled(true); comboBoxNrQuarto.setEnabled(false);
            labelRS.setEnabled(true); labelTotal.setEnabled(true); buscarDados.setEnabled(false);
            
            try{
                long diferenca = calcularDiferençaDeDatas(quartoASerPago);                        
                Connection con = DriverManager.getConnection("jdbc:derby://localhost:1527/Hotel", "root", "123456" );

                PreparedStatement sql = con.prepareStatement("SELECT valor FROM produtos WHERE id=1"); 
                ResultSet valorDiaria = sql.executeQuery();
                valorDiaria.next();

                Vector<Object> diaria = new Vector<Object>();
                diaria.add("Diárias x" + diferenca);
                Double total = valorDiaria.getDouble("valor") * diferenca;
                diaria.add(total);
                dadosDaTabela.add(diaria);
                updateTable();
                
                con.close();
            }
            catch(SQLException ex){
                
            }
        }
        else{
            JOptionPane.showMessageDialog(this, "Favor selecionar um quarto válido", "Erro", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_processarActionPerformed

    private void pagarContaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pagarContaActionPerformed
        
        this.setAlwaysOnTop(false);
        int response = JOptionPane.showConfirmDialog(null, "Deseja mesmo fechar esta conta?", "Confirmar",
        JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
        this.setAlwaysOnTop(true);
        System.out.println(JOptionPane.YES_OPTION);
        if (response == JOptionPane.YES_OPTION) {        
            try{
                Connection con = DriverManager.getConnection("jdbc:derby://localhost:1527/Hotel", "root", "123456" );
                PreparedStatement sql = con.prepareStatement("UPDATE quartos SET ocupado=false, precisa_limpar=true, cliente=NULL, data_inicial=NULL, data_final=NULL WHERE numero=?");
                sql.setString(1, comboBoxNrQuarto.getSelectedItem().toString());
                sql.executeUpdate();
                             
                JOptionPane.showMessageDialog(this, "Conta fechada com Sucesso!", "", JOptionPane.INFORMATION_MESSAGE);

                parent.setEnabled(true);
                parent.toFront();
                this.dispose();
                
                con.close();
            }
            catch(SQLException ex){

            }
        }
        
    }//GEN-LAST:event_pagarContaActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton adicionarProduto;
    private javax.swing.JButton buscarDados;
    private javax.swing.JComboBox<String> comboBoxNrQuarto;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel labelRS;
    private javax.swing.JLabel labelTotal;
    private javax.swing.JLabel labelValorTotal;
    private javax.swing.JButton pagarConta;
    private javax.swing.JPanel pane;
    private javax.swing.JButton processar;
    private javax.swing.JTable tabela;
    // End of variables declaration//GEN-END:variables

    public void updateTable(){    
        // names of columns
        Vector<String> columnNames = new Vector<String>();
        columnNames.add("Item");
        columnNames.add("Valor");    

        //Table Data      
        DefaultTableModel modelo = new DefaultTableModel(dadosDaTabela, columnNames);
        tabela.setModel(modelo);

        Double valorTotal = 0.0;
        

        for(int i = 0 ; i<dadosDaTabela.size() ; i++){
            Double temp = (Double)dadosDaTabela.get(i).get(1);
            
            valorTotal += temp;
        }
        
        labelValorTotal.setText(String.valueOf(valorTotal));
    }
    
    private long calcularDiferençaDeDatas(String quartoASerPago){            
        long diferenca = 0;
        try{
            Connection con = DriverManager.getConnection("jdbc:derby://localhost:1527/Hotel", "root", "123456" );

            PreparedStatement I = con.prepareStatement("SELECT data_inicial FROM quartos WHERE numero=?"); 
            I.setString(1, quartoASerPago);
            PreparedStatement F = con.prepareStatement("SELECT data_final FROM quartos WHERE numero=?"); 
            F.setString(1, quartoASerPago);

            ResultSet dataI = I.executeQuery();
            dataI.next();
            Date dataInicial = dataI.getDate("data_inicial");
            System.out.println(dataInicial);

            ResultSet dataF = F.executeQuery();
            dataF.next();
            Date dataFinal = dataF.getDate("data_final");
            System.out.println(dataFinal);

            //CALCULATE THE DIFERENCE OF DAYS                        
            long diff = dataFinal.getTime() - dataInicial.getTime();
            System.out.println ("Days: " + TimeUnit.DAYS.convert(diff, TimeUnit.MILLISECONDS));
                       
            con.close();
            
            return TimeUnit.DAYS.convert(diff, TimeUnit.MILLISECONDS);
        }
        catch(SQLException ex){
            
        }
        
        return diferenca;
    }

}
